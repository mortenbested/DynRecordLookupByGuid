using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;
using System.IO;
using System.Linq;
using System.Reflection;
using XrmToolBox.Extensibility;
using XrmToolBox.Extensibility.Interfaces;

namespace RecordLookupByGuid
{
    // Do not forget to update version number and author (company attribute) in AssemblyInfo.cs class
    // To generate Base64 string for Images below, you can use https://www.base64-image.de/
    [Export(typeof(IXrmToolBoxPlugin)),
        ExportMetadata("Name", "Record Lookup by Guid"),
        ExportMetadata("Description", "Search for records using a guid"),
        // Please specify the base64 content of a 32x32 pixels image
        ExportMetadata("SmallImageBase64", "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"),
        // Please specify the base64 content of a 80x80 pixels image
        ExportMetadata("BigImageBase64", ""),
        ExportMetadata("BackgroundColor", "LightSlateGray"),
        ExportMetadata("PrimaryFontColor", "Black"),
        ExportMetadata("SecondaryFontColor", "Gray")]
    public class MyPlugin : PluginBase
    {
        public override IXrmToolBoxPluginControl GetControl()
        {
            return new MyPluginControl();
        }

        /// <summary>
        /// Constructor 
        /// </summary>
        public MyPlugin()
        {
            // If you have external assemblies that you need to load, uncomment the following to 
            // hook into the event that will fire when an Assembly fails to resolve
            // AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(AssemblyResolveEventHandler);
        }

        /// <summary>
        /// Event fired by CLR when an assembly reference fails to load
        /// Assumes that related assemblies will be loaded from a subfolder named the same as the Plugin
        /// For example, a folder named Sample.XrmToolBox.MyPlugin 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="args"></param>
        /// <returns></returns>
        private Assembly AssemblyResolveEventHandler(object sender, ResolveEventArgs args)
        {
            Assembly loadAssembly = null;
            Assembly currAssembly = Assembly.GetExecutingAssembly();

            // base name of the assembly that failed to resolve
            var argName = args.Name.Substring(0, args.Name.IndexOf(","));

            // check to see if the failing assembly is one that we reference.
            List<AssemblyName> refAssemblies = currAssembly.GetReferencedAssemblies().ToList();
            var refAssembly = refAssemblies.Where(a => a.Name == argName).FirstOrDefault();

            // if the current unresolved assembly is referenced by our plugin, attempt to load
            if (refAssembly != null)
            {
                // load from the path to this plugin assembly, not host executable
                string dir = Path.GetDirectoryName(currAssembly.Location).ToLower();
                string folder = Path.GetFileNameWithoutExtension(currAssembly.Location);
                dir = Path.Combine(dir, folder);

                var assmbPath = Path.Combine(dir, $"{argName}.dll");

                if (File.Exists(assmbPath))
                {
                    loadAssembly = Assembly.LoadFrom(assmbPath);
                }
                else
                {
                    throw new FileNotFoundException($"Unable to locate dependency: {assmbPath}");
                }
            }

            return loadAssembly;
        }
    }
}